{"ast":null,"code":"const SET_USER = 'session/SET_USER';\nconst REMOVE_USER = 'session/REMOVE_USER';\n\nconst setUser = user => ({\n  type: SET_USER,\n  payload: user\n});\n\nconst removeUser = () => ({\n  type: REMOVE_USER\n});\n\nconst initialState = {\n  user: null\n};\nexport const authenticate = () => async dispatch => {\n  const response = await fetch('/api/auth/', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  if (response.ok) {\n    const data = await response.json();\n\n    if (data.errors) {\n      return;\n    }\n\n    dispatch(setUser(data));\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  const response = await fetch('/api/auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setUser(data));\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.'];\n  }\n};\nexport const logout = () => async dispatch => {\n  const response = await fetch('/api/auth/logout', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  if (response.ok) {\n    dispatch(removeUser());\n  }\n};\nexport const signUp = (username, email, password) => async dispatch => {\n  const response = await fetch('/api/auth/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setUser(data));\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.'];\n  }\n};\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_USER:\n      return {\n        user: action.payload\n      };\n\n    case REMOVE_USER:\n      return {\n        user: null\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/aunahuynh/Desktop/AppAcademy/7mod/capstone/react-app/src/store/session.js"],"names":["SET_USER","REMOVE_USER","setUser","user","type","payload","removeUser","initialState","authenticate","dispatch","response","fetch","headers","ok","data","json","errors","login","email","password","method","body","JSON","stringify","status","logout","signUp","username","reducer","state","action"],"mappings":"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","sourcesContent":["const SET_USER = 'session/SET_USER';\nconst REMOVE_USER = 'session/REMOVE_USER';\n\nconst setUser = (user) => ({\n    type: SET_USER,\n    payload: user\n});\n\nconst removeUser = () => ({\n    type: REMOVE_USER,\n})\n\nconst initialState = { user: null };\n\nexport const authenticate = () => async (dispatch) => {\n    const response = await fetch('/api/auth/', {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n    if (response.ok) {\n        const data = await response.json();\n        if (data.errors) {\n            return;\n        }\n\n        dispatch(setUser(data));\n    }\n}\n\nexport const login = (email, password) => async (dispatch) => {\n    const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            email,\n            password\n        })\n    });\n\n\n    if (response.ok) {\n        const data = await response.json();\n        dispatch(setUser(data))\n        return null;\n    } else if (response.status < 500) {\n        const data = await response.json();\n        if (data.errors) {\n            return data.errors;\n        }\n    } else {\n        return ['An error occurred. Please try again.']\n    }\n\n}\n\nexport const logout = () => async (dispatch) => {\n    const response = await fetch('/api/auth/logout', {\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    });\n\n    if (response.ok) {\n        dispatch(removeUser());\n    }\n};\n\n\nexport const signUp = (username, email, password) => async (dispatch) => {\n    const response = await fetch('/api/auth/signup', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            username,\n            email,\n            password,\n        }),\n    });\n\n    if (response.ok) {\n        const data = await response.json();\n        dispatch(setUser(data))\n        return null;\n    } else if (response.status < 500) {\n        const data = await response.json();\n        if (data.errors) {\n            return data.errors;\n        }\n    } else {\n        return ['An error occurred. Please try again.']\n    }\n}\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_USER:\n            return { user: action.payload }\n        case REMOVE_USER:\n            return { user: null }\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}